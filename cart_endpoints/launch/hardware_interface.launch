<?xml version="1.0"?>
<launch>
    <arg name="networking" default="true"/>
    <arg name="health" default="true"/>
    <arg name="voice" default="true"/>
    <arg name="pose" default="true"/>
    <arg name="visualize_pose" default="false"/>
    <arg name="obstacle_detection" default="true"/>

    <group>
        <node name="motor_endpoint" pkg="cart_endpoints" type="motor_endpoint.py" output="screen"/>
    </group>
    <group if="$(arg health)">
        <node name="cart_health_monitor" pkg="cart_endpoints" type="cart_health_monitor.py" output="screen"/>
    </group>
    <group if="$(arg networking)">
        <node name="network_client" pkg="cart_endpoints" type="ros_client.py" output="screen"/>
    </group>
    <group if="$(arg voice)">
        <node name="speech_recognition" pkg="cart_endpoints" type="speech_recognition_core.py" output="screen"/>
    </group>
    <group if="$(arg pose)">
        <node name="pose_tracking" pkg="cart_endpoints" type="pose_tracking.py"/>
        <include file="$(find video_stream_opencv)/launch/camera.launch">
            <arg name="video_stream_provider" value="/dev/video0" />
            <arg name="visualize" value="$(arg visualize_pose)" />
        </include>
    </group>
    <include file="$(find rplidar_ros)/launch/rplidar_a3.launch"/>
    <group if="$(arg obstacle_detection)">
        <node name="obstacle_detector" pkg="cart_endpoints" type="obstacle_detector.py" output="screen"/>
        <node name="local_planner" pkg="cart_endpoints" type="local_planner.py" output="screen"/>
    </group>
    <node name="network_camera" pkg="cart_endpoints" type="network_camera.py"/>
</launch>
